
package TelaConsulta;

import Classes.Compra;
import java.awt.event.KeyEvent;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Lucas
 */
public class CompraMes extends javax.swing.JFrame {
    String filtro1 = "", filtro2 = "";
    float valorTotal = 0;
    public CompraMes() {
        initComponents();
        gridCompraMes.getColumnModel().getColumn(0).setPreferredWidth(30);
        txtTotal.setEditable(false);
    }
    
    public void filtro(){
        switch(cbMes.getSelectedItem().toString()){
            case "Janeiro":
                filtro1 = cbAno.getSelectedItem().toString() + "-01-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-01-31 23:59:59";
                break;
            case "Fevereiro":
                if (cbAno.getSelectedItem().toString() == "2024" || cbAno.getSelectedItem().toString() == "2028") {
                    filtro2 = cbAno.getSelectedItem().toString() + "-02-29 23:59:59";
                }else{
                    filtro2 = cbAno.getSelectedItem().toString() + "-02-28 23:59:59";
                }
                filtro1 = cbAno.getSelectedItem().toString() + "-02-01 00:00:00";
                break;
            case "Março":
                filtro1 = cbAno.getSelectedItem().toString() + "-03-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-03-31 23:59:59";
                break;
            case "Abril":
                filtro1 = cbAno.getSelectedItem().toString() + "-04-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-04-30 23:59:59";
                break;
            case "Maio":
                filtro1 = cbAno.getSelectedItem().toString() + "-05-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-05-31 23:59:59";
                break;
            case "Junho":
                filtro1 = cbAno.getSelectedItem().toString() + "-06-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-06-30 23:59:59";
                break;
            case "Julho":
               
                
                filtro1 = cbAno.getSelectedItem().toString() + "-07-01 00:00:00.000";
                filtro2 = cbAno.getSelectedItem().toString() + "-07-31 23:59:59.999";
                break;
            case "Agosto":
                filtro1 = cbAno.getSelectedItem().toString() + "-08-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-08-31 23:59:59";
                break;
            case "Setembro":
                filtro1 = cbAno.getSelectedItem().toString() + "-09-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-09-30 23:59:59";
                break;
            case "Outubro":
                filtro1 = cbAno.getSelectedItem().toString() + "-10-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-10-31 23:59:59";
                break;
            case "Novembro":
                filtro1 = cbAno.getSelectedItem().toString() + "-11-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-11-30 23:59:59";
                break;
            case "Dezembro":
                filtro1 = cbAno.getSelectedItem().toString() + "-12-01 00:00:00";
                filtro2 = cbAno.getSelectedItem().toString() + "-12-31 23:59:59";
                break;           
        }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPesquisar = new javax.swing.JButton();
        cbMes = new javax.swing.JComboBox<>();
        btnExcel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridCompraMes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbAno = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/search.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        cbMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        cbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMesActionPerformed(evt);
            }
        });

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/excel.png"))); // NOI18N
        btnExcel.setText("Exportar para Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        gridCompraMes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Fornecedor", "Valor", "Data", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(gridCompraMes);

        jLabel1.setText("Consulta relatórios de compras por mês");

        jLabel2.setText("Mês:");

        cbAno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        cbAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAnoActionPerformed(evt);
            }
        });

        jLabel3.setText("Ano:");

        jLabel4.setText("Total em compras:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addComponent(btnPesquisar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(btnExcel)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar)
                    .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(cbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnExcel)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        Compra objCompra = new Compra();
        filtro();
       // JOptionPane.showMessageDialog(null, filtro1 + filtro2);
       // objCompra.searchCompra(gridCompraMes, "compras.id", "");
        valorTotal = objCompra.compraMes(gridCompraMes, filtro1, filtro2);
        if (valorTotal == 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma informação encontrada para o mês selecionado","Aviso",JOptionPane.INFORMATION_MESSAGE);
        }else{
            txtTotal.setText(String.valueOf(valorTotal).replace(".", ",")+"0");
        }
     /*   JOptionPane.showMessageDialog(null, valorTotal);*/
     //   objCompra.searchCompra(gridCompra, filtro, pesquisa);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void cbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMesActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        
        FileOutputStream excelSaida = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excel = new JFileChooser();
        excel.setDialogTitle("Salvar como");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL", "xls", "xlsx", "xlsm");

        int excelChooser = excel.showSaveDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {

            try {
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelPlanilha = excelJTableExporter.createSheet("Relatorio de Compras por mes");

                XSSFRow excelLinha = excelPlanilha.createRow(0);
                for (int k = 0; k < gridCompraMes.getColumnCount(); k++) {
                     XSSFCell excelCelula = excelLinha.createCell(k);
                     excelCelula.setCellValue(gridCompraMes.getColumnName(k));
                }
                
                for (int i = 0; i < gridCompraMes.getRowCount(); i++) {
                    excelLinha = excelPlanilha.createRow(i+1);
                    for (int j = 0; j < gridCompraMes.getColumnCount(); j++) {
                        XSSFCell excelCelula = excelLinha.createCell(j);
                        excelCelula.setCellValue(gridCompraMes.getValueAt(i, j).toString());
                    }
                }
                excelLinha = excelPlanilha.createRow(gridCompraMes.getRowCount() + 1);
                excelLinha = excelPlanilha.createRow(gridCompraMes.getRowCount() + 2);
                XSSFCell excelCelula = excelLinha.createCell(0);
                excelCelula.setCellValue("Total: ");
                excelCelula = excelLinha.createCell(1);
                excelCelula.setCellValue(valorTotal);
                
                for (int i = 0; i < gridCompraMes.getColumnCount(); i++) {
                    excelPlanilha.autoSizeColumn(i);
                }
                        
                excelSaida = new FileOutputStream(excel.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelSaida);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Arquivo gerado com sucesso!","Aviso",JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelSaida != null) {
                        excelSaida.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }

                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }

        }


    }//GEN-LAST:event_btnExcelActionPerformed

    private void cbAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompraMes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompraMes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompraMes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompraMes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompraMes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox<String> cbAno;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JTable gridCompraMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
